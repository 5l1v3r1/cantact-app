/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.cantact.ui;

import java.awt.CardLayout;
import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import org.openide.windows.TopComponent;
import org.openide.util.NbBundle.Messages;

/**
 * Top component which displays something.
 */
@ConvertAsProperties(
        dtd = "-//org.cantact.ui//Diagnostic//EN",
        autostore = false
)
@TopComponent.Description(
        preferredID = "DiagnosticTopComponent",
        //iconBase="SET/PATH/TO/ICON/HERE", 
        persistenceType = TopComponent.PERSISTENCE_ALWAYS
)
@TopComponent.Registration(mode = "editor", openAtStartup = false)
@ActionID(category = "Window", id = "org.cantact.ui.DiagnosticTopComponent")
@ActionReference(path = "Menu/Window" /*, position = 333 */)
@TopComponent.OpenActionRegistration(
        displayName = "#CTL_DiagnosticAction",
        preferredID = "DiagnosticTopComponent"
)
@Messages({
    "CTL_DiagnosticAction=Diagnostic",
    "CTL_DiagnosticTopComponent=Diagnostic Window",
    "HINT_DiagnosticTopComponent=This is a Diagnostic window"
})
public final class DiagnosticTopComponent extends TopComponent {

    public DiagnosticTopComponent() {
        initComponents();
        setName(Bundle.CTL_DiagnosticTopComponent());
        setToolTipText(Bundle.HINT_DiagnosticTopComponent());

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jLabel1 = new javax.swing.JLabel();
        transmitIdField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        receiveIdField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        serviceComboBox = new javax.swing.JComboBox();
        servicePanel = new javax.swing.JPanel();
        obdPanel = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        obdModeComboBox = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        obdPidField = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        obdRequestButton = new javax.swing.JButton();
        diagnosticSessionControlPanel = new javax.swing.JPanel();
        diagnosticSessionComboBox = new javax.swing.JComboBox();
        diagnosticSessionField = new javax.swing.JTextField();
        diagnosticSessionControlRequestButton = new javax.swing.JButton();
        ecuResetPanel = new javax.swing.JPanel();
        ecuResetTypeComboBox = new javax.swing.JComboBox();
        ecuResetTypeField = new javax.swing.JTextField();
        ecuResetRequestButton = new javax.swing.JButton();
        securityAccessPanel = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        securityAccessSecurityLevelField = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        securityAccessDataRecordField = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        securityAccessRequestSeedButton = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel10 = new javax.swing.JLabel();
        securityAccessSecurityKeyField = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        securityAccessSendKeyButton = new javax.swing.JButton();
        communicationControlPanel = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        communicationControlTypeComboBox = new javax.swing.JComboBox();
        jLabel13 = new javax.swing.JLabel();
        communicationControlTypeField = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        communicationControlCommunicationTypeField = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        ecuResetRequestButton1 = new javax.swing.JButton();
        testerPresentPanel = new javax.swing.JPanel();
        sendTesterPresentButton = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        readDataByIdPanel = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        readDataByIdField = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        readDataByIdRequestButton = new javax.swing.JButton();
        writeDataByIdPanel = new javax.swing.JPanel();
        jLabel19 = new javax.swing.JLabel();
        writeDataByIdIdentifierField = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        writeDataByIdValueField = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        writeDataByIdRequestButton = new javax.swing.JButton();
        clearDiagnosticInformationPanel = new javax.swing.JPanel();
        jLabel22 = new javax.swing.JLabel();
        clearDiagnosticInformationMaskField = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        clearDiagnosticInformationRequestButton = new javax.swing.JButton();
        routineControlPanel = new javax.swing.JPanel();
        jLabel24 = new javax.swing.JLabel();
        routineControlTypeComboBox = new javax.swing.JComboBox();
        jLabel26 = new javax.swing.JLabel();
        routineControlIdentifierField = new javax.swing.JTextField();
        jLabel27 = new javax.swing.JLabel();
        routineControlOptionRecordField = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        routineControlRequestButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();

        setMinimumSize(new java.awt.Dimension(600, 100));
        setPreferredSize(new java.awt.Dimension(800, 400));
        java.awt.GridBagLayout layout = new java.awt.GridBagLayout();
        layout.columnWeights = new double[] {0.0};
        layout.rowWeights = new double[] {1.0};
        setLayout(layout);

        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(DiagnosticTopComponent.class, "DiagnosticTopComponent.jLabel1.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(jLabel1, gridBagConstraints);

        transmitIdField.setText(org.openide.util.NbBundle.getMessage(DiagnosticTopComponent.class, "DiagnosticTopComponent.transmitIdField.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(transmitIdField, gridBagConstraints);

        org.openide.awt.Mnemonics.setLocalizedText(jLabel2, org.openide.util.NbBundle.getMessage(DiagnosticTopComponent.class, "DiagnosticTopComponent.jLabel2.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(jLabel2, gridBagConstraints);

        receiveIdField.setText(org.openide.util.NbBundle.getMessage(DiagnosticTopComponent.class, "DiagnosticTopComponent.receiveIdField.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(receiveIdField, gridBagConstraints);

        org.openide.awt.Mnemonics.setLocalizedText(jLabel3, org.openide.util.NbBundle.getMessage(DiagnosticTopComponent.class, "DiagnosticTopComponent.jLabel3.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(jLabel3, gridBagConstraints);

        serviceComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "OBD-II", "0x10 - DiagnosticSessionControl", "0x11 - ECUReset", "0x27 - SecurityAccess", "0x28 - CommunicationControl", "0x3E - TesterPresent", "0x22 - ReadDataByIdentifier", "0x2E - WriteDataByIdentifier", "0x14 - ClearDiagnosticInformation", "0x31 - RoutineControl", "-------", "0x23 - ReadMemoryByAddress", "0x24 - ReadScalingDataByIdentifier", "0x2A - ReadDataByPeriodicIdentifier", "0x2C - DynamicallyDefineDataIdentifier", "0x2F - InputOutputControlByIdentifier", "0x3D - WriteMemoryByAddress", "0x34 - RequestDownload", "0x35 - RequestUpload", "0x36 - TransferData", "0x37 - RequestTransferExit", "0x83 - AccessTimingParameter", "0x84 - SecuredDataTransmission", "0x85 - ControlDTCSetting", "0x86 - ResponseOnEvent", "0x87 - LinkControl" }));
        serviceComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                serviceComboBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(serviceComboBox, gridBagConstraints);

        servicePanel.setLayout(new java.awt.CardLayout());

        obdPanel.setLayout(new java.awt.GridLayout(3, 0));

        org.openide.awt.Mnemonics.setLocalizedText(jLabel4, org.openide.util.NbBundle.getMessage(DiagnosticTopComponent.class, "DiagnosticTopComponent.jLabel4.text")); // NOI18N
        obdPanel.add(jLabel4);

        obdModeComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "01 - Show Current Data", "02 - Show Freeze Frame Data", "03 - Show Stored DTCs", "04 - Clear DTCs", "06 - Test Results", "07 - Show Pending DTCs", "08 - Control Operation", "09 - Request Vehicle Info", "0A - Permanent DTCs" }));
        obdPanel.add(obdModeComboBox);

        org.openide.awt.Mnemonics.setLocalizedText(jLabel5, org.openide.util.NbBundle.getMessage(DiagnosticTopComponent.class, "DiagnosticTopComponent.jLabel5.text")); // NOI18N
        obdPanel.add(jLabel5);

        obdPidField.setText(org.openide.util.NbBundle.getMessage(DiagnosticTopComponent.class, "DiagnosticTopComponent.obdPidField.text")); // NOI18N
        obdPanel.add(obdPidField);

        org.openide.awt.Mnemonics.setLocalizedText(jLabel6, org.openide.util.NbBundle.getMessage(DiagnosticTopComponent.class, "DiagnosticTopComponent.jLabel6.text")); // NOI18N
        obdPanel.add(jLabel6);

        org.openide.awt.Mnemonics.setLocalizedText(obdRequestButton, org.openide.util.NbBundle.getMessage(DiagnosticTopComponent.class, "DiagnosticTopComponent.obdRequestButton.text")); // NOI18N
        obdPanel.add(obdRequestButton);

        servicePanel.add(obdPanel, "obdCard");

        diagnosticSessionControlPanel.setLayout(new java.awt.GridLayout(6, 0));

        diagnosticSessionComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "0x01 - defaultSession", "0x02 - programmingSession", "0x03 - extendedDiagnosticSession", "0x04 - safetySystemDiagnosticSession", "Other..." }));
        diagnosticSessionControlPanel.add(diagnosticSessionComboBox);

        diagnosticSessionField.setText(org.openide.util.NbBundle.getMessage(DiagnosticTopComponent.class, "DiagnosticTopComponent.diagnosticSessionField.text")); // NOI18N
        diagnosticSessionField.setEnabled(false);
        diagnosticSessionControlPanel.add(diagnosticSessionField);

        org.openide.awt.Mnemonics.setLocalizedText(diagnosticSessionControlRequestButton, org.openide.util.NbBundle.getMessage(DiagnosticTopComponent.class, "DiagnosticTopComponent.diagnosticSessionControlRequestButton.text")); // NOI18N
        diagnosticSessionControlPanel.add(diagnosticSessionControlRequestButton);

        servicePanel.add(diagnosticSessionControlPanel, "diagnosticSessionControlCard");

        ecuResetPanel.setLayout(new java.awt.GridLayout(6, 0));

        ecuResetTypeComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "0x01 - hardReset", "0x02 - keyOffOnReset", "0x03 - softReset", "0x04 - enableRapidPowerDown", "0x05 - disableRapidPowerDown", "Other..." }));
        ecuResetPanel.add(ecuResetTypeComboBox);

        ecuResetTypeField.setText(org.openide.util.NbBundle.getMessage(DiagnosticTopComponent.class, "DiagnosticTopComponent.ecuResetTypeField.text")); // NOI18N
        ecuResetTypeField.setEnabled(false);
        ecuResetPanel.add(ecuResetTypeField);

        org.openide.awt.Mnemonics.setLocalizedText(ecuResetRequestButton, org.openide.util.NbBundle.getMessage(DiagnosticTopComponent.class, "DiagnosticTopComponent.ecuResetRequestButton.text")); // NOI18N
        ecuResetPanel.add(ecuResetRequestButton);

        servicePanel.add(ecuResetPanel, "ecuResetCard");

        securityAccessPanel.setLayout(new java.awt.GridLayout(6, 2));

        org.openide.awt.Mnemonics.setLocalizedText(jLabel7, org.openide.util.NbBundle.getMessage(DiagnosticTopComponent.class, "DiagnosticTopComponent.jLabel7.text")); // NOI18N
        securityAccessPanel.add(jLabel7);

        securityAccessSecurityLevelField.setText(org.openide.util.NbBundle.getMessage(DiagnosticTopComponent.class, "DiagnosticTopComponent.securityAccessSecurityLevelField.text")); // NOI18N
        securityAccessPanel.add(securityAccessSecurityLevelField);

        org.openide.awt.Mnemonics.setLocalizedText(jLabel8, org.openide.util.NbBundle.getMessage(DiagnosticTopComponent.class, "DiagnosticTopComponent.jLabel8.text")); // NOI18N
        securityAccessPanel.add(jLabel8);

        securityAccessDataRecordField.setText(org.openide.util.NbBundle.getMessage(DiagnosticTopComponent.class, "DiagnosticTopComponent.securityAccessDataRecordField.text")); // NOI18N
        securityAccessPanel.add(securityAccessDataRecordField);

        org.openide.awt.Mnemonics.setLocalizedText(jLabel9, org.openide.util.NbBundle.getMessage(DiagnosticTopComponent.class, "DiagnosticTopComponent.jLabel9.text")); // NOI18N
        securityAccessPanel.add(jLabel9);

        org.openide.awt.Mnemonics.setLocalizedText(securityAccessRequestSeedButton, org.openide.util.NbBundle.getMessage(DiagnosticTopComponent.class, "DiagnosticTopComponent.securityAccessRequestSeedButton.text")); // NOI18N
        securityAccessPanel.add(securityAccessRequestSeedButton);
        securityAccessPanel.add(jSeparator1);
        securityAccessPanel.add(jSeparator2);

        org.openide.awt.Mnemonics.setLocalizedText(jLabel10, org.openide.util.NbBundle.getMessage(DiagnosticTopComponent.class, "DiagnosticTopComponent.jLabel10.text")); // NOI18N
        securityAccessPanel.add(jLabel10);

        securityAccessSecurityKeyField.setText(org.openide.util.NbBundle.getMessage(DiagnosticTopComponent.class, "DiagnosticTopComponent.securityAccessSecurityKeyField.text")); // NOI18N
        securityAccessPanel.add(securityAccessSecurityKeyField);

        org.openide.awt.Mnemonics.setLocalizedText(jLabel11, org.openide.util.NbBundle.getMessage(DiagnosticTopComponent.class, "DiagnosticTopComponent.jLabel11.text")); // NOI18N
        securityAccessPanel.add(jLabel11);

        org.openide.awt.Mnemonics.setLocalizedText(securityAccessSendKeyButton, org.openide.util.NbBundle.getMessage(DiagnosticTopComponent.class, "DiagnosticTopComponent.securityAccessSendKeyButton.text")); // NOI18N
        securityAccessPanel.add(securityAccessSendKeyButton);

        servicePanel.add(securityAccessPanel, "securityAccessCard");

        communicationControlPanel.setLayout(new java.awt.GridLayout(6, 2));

        org.openide.awt.Mnemonics.setLocalizedText(jLabel12, org.openide.util.NbBundle.getMessage(DiagnosticTopComponent.class, "DiagnosticTopComponent.jLabel12.text")); // NOI18N
        communicationControlPanel.add(jLabel12);

        communicationControlTypeComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "0x00 - enableRxAndTx", "0x01 - enableRxAndDisableTx", "0x02 - disableRxAndEnableTx", "0x03 - disableRxAndTx", "Other..." }));
        communicationControlPanel.add(communicationControlTypeComboBox);

        org.openide.awt.Mnemonics.setLocalizedText(jLabel13, org.openide.util.NbBundle.getMessage(DiagnosticTopComponent.class, "DiagnosticTopComponent.jLabel13.text")); // NOI18N
        communicationControlPanel.add(jLabel13);

        communicationControlTypeField.setText(org.openide.util.NbBundle.getMessage(DiagnosticTopComponent.class, "DiagnosticTopComponent.communicationControlTypeField.text")); // NOI18N
        communicationControlTypeField.setEnabled(false);
        communicationControlPanel.add(communicationControlTypeField);

        org.openide.awt.Mnemonics.setLocalizedText(jLabel15, org.openide.util.NbBundle.getMessage(DiagnosticTopComponent.class, "DiagnosticTopComponent.jLabel15.text")); // NOI18N
        communicationControlPanel.add(jLabel15);

        communicationControlCommunicationTypeField.setText(org.openide.util.NbBundle.getMessage(DiagnosticTopComponent.class, "DiagnosticTopComponent.communicationControlCommunicationTypeField.text")); // NOI18N
        communicationControlPanel.add(communicationControlCommunicationTypeField);

        org.openide.awt.Mnemonics.setLocalizedText(jLabel14, org.openide.util.NbBundle.getMessage(DiagnosticTopComponent.class, "DiagnosticTopComponent.jLabel14.text")); // NOI18N
        communicationControlPanel.add(jLabel14);

        org.openide.awt.Mnemonics.setLocalizedText(ecuResetRequestButton1, org.openide.util.NbBundle.getMessage(DiagnosticTopComponent.class, "DiagnosticTopComponent.ecuResetRequestButton1.text")); // NOI18N
        communicationControlPanel.add(ecuResetRequestButton1);

        servicePanel.add(communicationControlPanel, "communicationControlCard");

        testerPresentPanel.setLayout(new java.awt.GridLayout(6, 0));

        org.openide.awt.Mnemonics.setLocalizedText(sendTesterPresentButton, org.openide.util.NbBundle.getMessage(DiagnosticTopComponent.class, "DiagnosticTopComponent.sendTesterPresentButton.text")); // NOI18N
        sendTesterPresentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendTesterPresentButtonActionPerformed(evt);
            }
        });
        testerPresentPanel.add(sendTesterPresentButton);

        org.openide.awt.Mnemonics.setLocalizedText(jLabel16, org.openide.util.NbBundle.getMessage(DiagnosticTopComponent.class, "DiagnosticTopComponent.jLabel16.text")); // NOI18N
        testerPresentPanel.add(jLabel16);

        servicePanel.add(testerPresentPanel, "testerPresentCard");

        readDataByIdPanel.setLayout(new java.awt.GridLayout(3, 2));

        org.openide.awt.Mnemonics.setLocalizedText(jLabel17, org.openide.util.NbBundle.getMessage(DiagnosticTopComponent.class, "DiagnosticTopComponent.jLabel17.text")); // NOI18N
        readDataByIdPanel.add(jLabel17);

        readDataByIdField.setText(org.openide.util.NbBundle.getMessage(DiagnosticTopComponent.class, "DiagnosticTopComponent.readDataByIdField.text")); // NOI18N
        readDataByIdField.setEnabled(false);
        readDataByIdPanel.add(readDataByIdField);

        org.openide.awt.Mnemonics.setLocalizedText(jLabel18, org.openide.util.NbBundle.getMessage(DiagnosticTopComponent.class, "DiagnosticTopComponent.jLabel18.text")); // NOI18N
        readDataByIdPanel.add(jLabel18);

        org.openide.awt.Mnemonics.setLocalizedText(readDataByIdRequestButton, org.openide.util.NbBundle.getMessage(DiagnosticTopComponent.class, "DiagnosticTopComponent.readDataByIdRequestButton.text")); // NOI18N
        readDataByIdPanel.add(readDataByIdRequestButton);

        servicePanel.add(readDataByIdPanel, "readDataByIdCard");

        writeDataByIdPanel.setLayout(new java.awt.GridLayout(3, 2));

        org.openide.awt.Mnemonics.setLocalizedText(jLabel19, org.openide.util.NbBundle.getMessage(DiagnosticTopComponent.class, "DiagnosticTopComponent.jLabel19.text")); // NOI18N
        writeDataByIdPanel.add(jLabel19);

        writeDataByIdIdentifierField.setText(org.openide.util.NbBundle.getMessage(DiagnosticTopComponent.class, "DiagnosticTopComponent.writeDataByIdIdentifierField.text")); // NOI18N
        writeDataByIdPanel.add(writeDataByIdIdentifierField);

        org.openide.awt.Mnemonics.setLocalizedText(jLabel21, org.openide.util.NbBundle.getMessage(DiagnosticTopComponent.class, "DiagnosticTopComponent.jLabel21.text")); // NOI18N
        writeDataByIdPanel.add(jLabel21);

        writeDataByIdValueField.setText(org.openide.util.NbBundle.getMessage(DiagnosticTopComponent.class, "DiagnosticTopComponent.writeDataByIdValueField.text")); // NOI18N
        writeDataByIdPanel.add(writeDataByIdValueField);

        org.openide.awt.Mnemonics.setLocalizedText(jLabel20, org.openide.util.NbBundle.getMessage(DiagnosticTopComponent.class, "DiagnosticTopComponent.jLabel20.text")); // NOI18N
        writeDataByIdPanel.add(jLabel20);

        org.openide.awt.Mnemonics.setLocalizedText(writeDataByIdRequestButton, org.openide.util.NbBundle.getMessage(DiagnosticTopComponent.class, "DiagnosticTopComponent.writeDataByIdRequestButton.text")); // NOI18N
        writeDataByIdPanel.add(writeDataByIdRequestButton);

        servicePanel.add(writeDataByIdPanel, "writeDataByIdCard");

        clearDiagnosticInformationPanel.setLayout(new java.awt.GridLayout(3, 2));

        org.openide.awt.Mnemonics.setLocalizedText(jLabel22, org.openide.util.NbBundle.getMessage(DiagnosticTopComponent.class, "DiagnosticTopComponent.jLabel22.text")); // NOI18N
        clearDiagnosticInformationPanel.add(jLabel22);

        clearDiagnosticInformationMaskField.setText(org.openide.util.NbBundle.getMessage(DiagnosticTopComponent.class, "DiagnosticTopComponent.clearDiagnosticInformationMaskField.text")); // NOI18N
        clearDiagnosticInformationPanel.add(clearDiagnosticInformationMaskField);

        org.openide.awt.Mnemonics.setLocalizedText(jLabel23, org.openide.util.NbBundle.getMessage(DiagnosticTopComponent.class, "DiagnosticTopComponent.jLabel23.text")); // NOI18N
        clearDiagnosticInformationPanel.add(jLabel23);

        org.openide.awt.Mnemonics.setLocalizedText(clearDiagnosticInformationRequestButton, org.openide.util.NbBundle.getMessage(DiagnosticTopComponent.class, "DiagnosticTopComponent.clearDiagnosticInformationRequestButton.text")); // NOI18N
        clearDiagnosticInformationPanel.add(clearDiagnosticInformationRequestButton);

        servicePanel.add(clearDiagnosticInformationPanel, "clearDiagnosticInformationCard");

        routineControlPanel.setLayout(new java.awt.GridLayout(6, 2));

        org.openide.awt.Mnemonics.setLocalizedText(jLabel24, org.openide.util.NbBundle.getMessage(DiagnosticTopComponent.class, "DiagnosticTopComponent.jLabel24.text")); // NOI18N
        routineControlPanel.add(jLabel24);

        routineControlTypeComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "0x01 - startRoutine", "0x02 - stopRoutine", "0x03 - requestRoutineResults" }));
        routineControlPanel.add(routineControlTypeComboBox);

        org.openide.awt.Mnemonics.setLocalizedText(jLabel26, org.openide.util.NbBundle.getMessage(DiagnosticTopComponent.class, "DiagnosticTopComponent.jLabel26.text")); // NOI18N
        routineControlPanel.add(jLabel26);

        routineControlIdentifierField.setText(org.openide.util.NbBundle.getMessage(DiagnosticTopComponent.class, "DiagnosticTopComponent.routineControlIdentifierField.text")); // NOI18N
        routineControlPanel.add(routineControlIdentifierField);

        org.openide.awt.Mnemonics.setLocalizedText(jLabel27, org.openide.util.NbBundle.getMessage(DiagnosticTopComponent.class, "DiagnosticTopComponent.jLabel27.text")); // NOI18N
        routineControlPanel.add(jLabel27);

        routineControlOptionRecordField.setText(org.openide.util.NbBundle.getMessage(DiagnosticTopComponent.class, "DiagnosticTopComponent.routineControlOptionRecordField.text")); // NOI18N
        routineControlPanel.add(routineControlOptionRecordField);

        org.openide.awt.Mnemonics.setLocalizedText(jLabel25, org.openide.util.NbBundle.getMessage(DiagnosticTopComponent.class, "DiagnosticTopComponent.jLabel25.text")); // NOI18N
        routineControlPanel.add(jLabel25);

        org.openide.awt.Mnemonics.setLocalizedText(routineControlRequestButton, org.openide.util.NbBundle.getMessage(DiagnosticTopComponent.class, "DiagnosticTopComponent.routineControlRequestButton.text")); // NOI18N
        routineControlPanel.add(routineControlRequestButton);

        servicePanel.add(routineControlPanel, "routineControlCard");

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        add(servicePanel, gridBagConstraints);

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weighty = 10.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        add(jScrollPane1, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void serviceComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_serviceComboBoxActionPerformed
        CardLayout layout = (CardLayout) servicePanel.getLayout();
        switch (serviceComboBox.getSelectedIndex()) {
            case 0:
                layout.show(servicePanel, "obdCard");
                break;
            case 1:
                layout.show(servicePanel, "diagnosticSessionControlCard");
                break;
            case 2:
                layout.show(servicePanel, "ecuResetCard");
                break;
            case 3:
                layout.show(servicePanel, "securityAccessCard");
                break;            
            case 4:
                layout.show(servicePanel, "communicationControlCard");
                break;            
            case 5:
                layout.show(servicePanel, "testerPresentCard");
                break;
            case 6:
                layout.show(servicePanel, "readDataByIdCard");
                break;
            case 7:
                layout.show(servicePanel, "writeDataByIdCard");
                break;                
            case 8:
                layout.show(servicePanel, "clearDiagnosticInformationCard");
                break;              
            case 9:
                layout.show(servicePanel, "routineControlCard");
                break;                
        }
    }//GEN-LAST:event_serviceComboBoxActionPerformed

    private void sendTesterPresentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendTesterPresentButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sendTesterPresentButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField clearDiagnosticInformationMaskField;
    private javax.swing.JPanel clearDiagnosticInformationPanel;
    private javax.swing.JButton clearDiagnosticInformationRequestButton;
    private javax.swing.JTextField communicationControlCommunicationTypeField;
    private javax.swing.JPanel communicationControlPanel;
    private javax.swing.JComboBox communicationControlTypeComboBox;
    private javax.swing.JTextField communicationControlTypeField;
    private javax.swing.JComboBox diagnosticSessionComboBox;
    private javax.swing.JPanel diagnosticSessionControlPanel;
    private javax.swing.JButton diagnosticSessionControlRequestButton;
    private javax.swing.JTextField diagnosticSessionField;
    private javax.swing.JPanel ecuResetPanel;
    private javax.swing.JButton ecuResetRequestButton;
    private javax.swing.JButton ecuResetRequestButton1;
    private javax.swing.JComboBox ecuResetTypeComboBox;
    private javax.swing.JTextField ecuResetTypeField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JComboBox obdModeComboBox;
    private javax.swing.JPanel obdPanel;
    private javax.swing.JTextField obdPidField;
    private javax.swing.JButton obdRequestButton;
    private javax.swing.JTextField readDataByIdField;
    private javax.swing.JPanel readDataByIdPanel;
    private javax.swing.JButton readDataByIdRequestButton;
    private javax.swing.JTextField receiveIdField;
    private javax.swing.JTextField routineControlIdentifierField;
    private javax.swing.JTextField routineControlOptionRecordField;
    private javax.swing.JPanel routineControlPanel;
    private javax.swing.JButton routineControlRequestButton;
    private javax.swing.JComboBox routineControlTypeComboBox;
    private javax.swing.JTextField securityAccessDataRecordField;
    private javax.swing.JPanel securityAccessPanel;
    private javax.swing.JButton securityAccessRequestSeedButton;
    private javax.swing.JTextField securityAccessSecurityKeyField;
    private javax.swing.JTextField securityAccessSecurityLevelField;
    private javax.swing.JButton securityAccessSendKeyButton;
    private javax.swing.JButton sendTesterPresentButton;
    private javax.swing.JComboBox serviceComboBox;
    private javax.swing.JPanel servicePanel;
    private javax.swing.JPanel testerPresentPanel;
    private javax.swing.JTextField transmitIdField;
    private javax.swing.JTextField writeDataByIdIdentifierField;
    private javax.swing.JPanel writeDataByIdPanel;
    private javax.swing.JButton writeDataByIdRequestButton;
    private javax.swing.JTextField writeDataByIdValueField;
    // End of variables declaration//GEN-END:variables
    @Override
    public void componentOpened() {
        // TODO add custom code on component opening
    }

    @Override
    public void componentClosed() {
        // TODO add custom code on component closing
    }

    void writeProperties(java.util.Properties p) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        p.setProperty("version", "1.0");
        // TODO store your settings
    }

    void readProperties(java.util.Properties p) {
        String version = p.getProperty("version");
        // TODO read your settings according to their version
    }
}
